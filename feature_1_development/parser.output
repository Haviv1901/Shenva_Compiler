Grammar

    0 $accept: program $end

    1 program: functions
    2        | blocks

    3 functions: function
    4          | functions function

    5 function: DEF VAR LPAREN parameterList RPAREN empty_space LBRACK blocks RBRACK ENDL
    6         | DEF VAR LPAREN RPAREN empty_space LBRACK blocks RBRACK ENDL

    7 parameterList: INT VAR
    8              | CHAR VAR
    9              | BOOL VAR
   10              | FLOAT VAR
   11              | parameterList COMMA INT VAR
   12              | parameterList COMMA CHAR VAR
   13              | parameterList COMMA BOOL VAR
   14              | parameterList COMMA FLOAT VAR

   15 blocks: block
   16       | blocks block

   17 block: statement
   18      | condition

   19 condition: IF LPAREN expression RPAREN empty_space LBRACK blocks RBRACK ENDL else_part
   20          | WHILE LPAREN expression RPAREN empty_space LBRACK blocks RBRACK ENDL
   21          | FOR LPAREN expression COMMA expression RPAREN empty_space LBRACK blocks RBRACK ENDL
   22          | FOR LPAREN expression COMMA assignment RPAREN empty_space LBRACK blocks RBRACK ENDL

   23 else_part: ELSE empty_space LBRACK blocks RBRACK ENDL
   24          | ELSE condition
   25          | /* empty */

   26 empty_space: ENDL
   27            | empty_space ENDL

   28 statement: PRINTINT LPAREN expression_list RPAREN ENDL
   29          | PRINTCHAR LPAREN expression_list RPAREN ENDL
   30          | PRINTFLOAT LPAREN expression_list RPAREN ENDL
   31          | expression ENDL
   32          | declaration ENDL
   33          | assignment ENDL
   34          | ENDL
   35          | ERROR

   36 declaration: INT decleration_list
   37            | CHAR decleration_list
   38            | FLOAT decleration_list
   39            | BOOL decleration_list

   40 decleration_list: VAR
   41                 | VAR ASSIGN expression
   42                 | decleration_list COMMA VAR
   43                 | decleration_list COMMA VAR ASSIGN expression

   44 expression_list: expression
   45                | expression_list COMMA expression

   46 assignment: VAR ASSIGN expression
   47           | VAR ADDEQ expression
   48           | VAR SUBEQ expression
   49           | VAR MULEQ expression
   50           | VAR DIVEQ expression
   51           | VAR MODEQ expression

   52 input: INTINPUT
   53      | FLOATINPUT
   54      | CHARINPUT

   55 expression: boolean_expression
   56           | numeric_expression

   57 boolean_expression: numeric_expression EQUALS numeric_expression
   58                   | numeric_expression NOTEQUALS numeric_expression
   59                   | numeric_expression GREATER numeric_expression
   60                   | numeric_expression NOTGREATER numeric_expression
   61                   | numeric_expression LESSER numeric_expression
   62                   | numeric_expression NOTLESSER numeric_expression
   63                   | numeric_expression GREATEREQUALS numeric_expression
   64                   | numeric_expression LESSEREQUALS numeric_expression
   65                   | LPAREN boolean_expression RPAREN
   66                   | boolean_expression OR boolean_expression
   67                   | boolean_expression AND boolean_expression
   68                   | NOT boolean_expression

   69 numeric_expression: NUM
   70                   | VAR
   71                   | TRUE
   72                   | FALSE
   73                   | LETTER
   74                   | DECIMAL
   75                   | input LPAREN RPAREN
   76                   | VAR LPAREN expression_list RPAREN
   77                   | VAR LPAREN RPAREN
   78                   | numeric_expression ADD numeric_expression
   79                   | numeric_expression SUB numeric_expression
   80                   | numeric_expression MUL numeric_expression
   81                   | numeric_expression DIV numeric_expression
   82                   | numeric_expression MOD numeric_expression
   83                   | LPAREN numeric_expression RPAREN
   84                   | error


Terminals, with rules where they appear

$end (0) 0
error (256) 84
NUM (258) 69
LETTER (259) 73
DECIMAL (260) 74
BOOL (261) 9 13 39
ADD (262) 78
SUB (263) 79
MUL (264) 80
DIV (265) 81
MOD (266) 82
LPAREN (267) 5 6 19 20 21 22 28 29 30 65 75 76 77 83
RPAREN (268) 5 6 19 20 21 22 28 29 30 65 75 76 77 83
EQUALS (269) 57
NOTEQUALS (270) 58
GREATER (271) 59
NOTGREATER (272) 60
LESSER (273) 61
NOTLESSER (274) 62
GREATEREQUALS (275) 63
LESSEREQUALS (276) 64
NOT (277) 68
OR (278) 66
AND (279) 67
IF (280) 19
ELSE (281) 23 24
LBRACK (282) 5 6 19 20 21 22 23
RBRACK (283) 5 6 19 20 21 22 23
WHILE (284) 20
FOR (285) 21 22
ERROR (286) 35
PRINTINT (287) 28
PRINTCHAR (288) 29
PRINTFLOAT (289) 30
COMMA (290) 11 12 13 14 21 22 42 43 45
INTINPUT (291) 52
FLOATINPUT (292) 53
CHARINPUT (293) 54
TRUE (294) 71
FALSE (295) 72
ENDL (296) 5 6 19 20 21 22 23 26 27 28 29 30 31 32 33 34
ASSIGN (297) 41 43 46
INT (298) 7 11 36
CHAR (299) 8 12 37
FLOAT (300) 10 14 38
VAR (301) 5 6 7 8 9 10 11 12 13 14 40 41 42 43 46 47 48 49 50 51 70
    76 77
ADDEQ (302) 47
SUBEQ (303) 48
MULEQ (304) 49
DIVEQ (305) 50
MODEQ (306) 51
DEF (307) 5 6
LOWER_THAN_ELSE (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
functions (56)
    on left: 3 4, on right: 1 4
function (57)
    on left: 5 6, on right: 3 4
parameterList (58)
    on left: 7 8 9 10 11 12 13 14, on right: 5 11 12 13 14
blocks (59)
    on left: 15 16, on right: 2 5 6 16 19 20 21 22 23
block (60)
    on left: 17 18, on right: 15 16
condition (61)
    on left: 19 20 21 22, on right: 18 24
else_part (62)
    on left: 23 24 25, on right: 19
empty_space (63)
    on left: 26 27, on right: 5 6 19 20 21 22 23 27
statement (64)
    on left: 28 29 30 31 32 33 34 35, on right: 17
declaration (65)
    on left: 36 37 38 39, on right: 32
decleration_list (66)
    on left: 40 41 42 43, on right: 36 37 38 39 42 43
expression_list (67)
    on left: 44 45, on right: 28 29 30 45 76
assignment (68)
    on left: 46 47 48 49 50 51, on right: 22 33
input (69)
    on left: 52 53 54, on right: 75
expression (70)
    on left: 55 56, on right: 19 20 21 22 31 41 43 44 45 46 47 48 49
    50 51
boolean_expression (71)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68, on right: 55 65 66
    67 68
numeric_expression (72)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84, on right:
    56 57 58 59 60 61 62 63 64 78 79 80 81 82 83


state 0

    0 $accept: . program $end

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24
    DEF         shift, and go to state 25

    program             go to state 26
    functions           go to state 27
    function            go to state 28
    blocks              go to state 29
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 1

   84 numeric_expression: error .

    $default  reduce using rule 84 (numeric_expression)


state 2

   69 numeric_expression: NUM .

    $default  reduce using rule 69 (numeric_expression)


state 3

   73 numeric_expression: LETTER .

    $default  reduce using rule 73 (numeric_expression)


state 4

   74 numeric_expression: DECIMAL .

    $default  reduce using rule 74 (numeric_expression)


state 5

   39 declaration: BOOL . decleration_list

    VAR  shift, and go to state 39

    decleration_list  go to state 40


state 6

   65 boolean_expression: LPAREN . boolean_expression RPAREN
   83 numeric_expression: LPAREN . numeric_expression RPAREN

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    boolean_expression  go to state 42
    numeric_expression  go to state 43


state 7

   68 boolean_expression: NOT . boolean_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    boolean_expression  go to state 44
    numeric_expression  go to state 45


state 8

   19 condition: IF . LPAREN expression RPAREN empty_space LBRACK blocks RBRACK ENDL else_part

    LPAREN  shift, and go to state 46


state 9

   20 condition: WHILE . LPAREN expression RPAREN empty_space LBRACK blocks RBRACK ENDL

    LPAREN  shift, and go to state 47


state 10

   21 condition: FOR . LPAREN expression COMMA expression RPAREN empty_space LBRACK blocks RBRACK ENDL
   22          | FOR . LPAREN expression COMMA assignment RPAREN empty_space LBRACK blocks RBRACK ENDL

    LPAREN  shift, and go to state 48


state 11

   35 statement: ERROR .

    $default  reduce using rule 35 (statement)


state 12

   28 statement: PRINTINT . LPAREN expression_list RPAREN ENDL

    LPAREN  shift, and go to state 49


state 13

   29 statement: PRINTCHAR . LPAREN expression_list RPAREN ENDL

    LPAREN  shift, and go to state 50


state 14

   30 statement: PRINTFLOAT . LPAREN expression_list RPAREN ENDL

    LPAREN  shift, and go to state 51


state 15

   52 input: INTINPUT .

    $default  reduce using rule 52 (input)


state 16

   53 input: FLOATINPUT .

    $default  reduce using rule 53 (input)


state 17

   54 input: CHARINPUT .

    $default  reduce using rule 54 (input)


state 18

   71 numeric_expression: TRUE .

    $default  reduce using rule 71 (numeric_expression)


state 19

   72 numeric_expression: FALSE .

    $default  reduce using rule 72 (numeric_expression)


state 20

   34 statement: ENDL .

    $default  reduce using rule 34 (statement)


state 21

   36 declaration: INT . decleration_list

    VAR  shift, and go to state 39

    decleration_list  go to state 52


state 22

   37 declaration: CHAR . decleration_list

    VAR  shift, and go to state 39

    decleration_list  go to state 53


state 23

   38 declaration: FLOAT . decleration_list

    VAR  shift, and go to state 39

    decleration_list  go to state 54


state 24

   46 assignment: VAR . ASSIGN expression
   47           | VAR . ADDEQ expression
   48           | VAR . SUBEQ expression
   49           | VAR . MULEQ expression
   50           | VAR . DIVEQ expression
   51           | VAR . MODEQ expression
   70 numeric_expression: VAR .
   76                   | VAR . LPAREN expression_list RPAREN
   77                   | VAR . LPAREN RPAREN

    LPAREN  shift, and go to state 55
    ASSIGN  shift, and go to state 56
    ADDEQ   shift, and go to state 57
    SUBEQ   shift, and go to state 58
    MULEQ   shift, and go to state 59
    DIVEQ   shift, and go to state 60
    MODEQ   shift, and go to state 61

    $default  reduce using rule 70 (numeric_expression)


state 25

    5 function: DEF . VAR LPAREN parameterList RPAREN empty_space LBRACK blocks RBRACK ENDL
    6         | DEF . VAR LPAREN RPAREN empty_space LBRACK blocks RBRACK ENDL

    VAR  shift, and go to state 62


state 26

    0 $accept: program . $end

    $end  shift, and go to state 63


state 27

    1 program: functions .
    4 functions: functions . function

    DEF  shift, and go to state 25

    $default  reduce using rule 1 (program)

    function  go to state 64


state 28

    3 functions: function .

    $default  reduce using rule 3 (functions)


state 29

    2 program: blocks .
   16 blocks: blocks . block

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    $end  reduce using rule 2 (program)

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 30

   15 blocks: block .

    $default  reduce using rule 15 (blocks)


state 31

   18 block: condition .

    $default  reduce using rule 18 (block)


state 32

   17 block: statement .

    $default  reduce using rule 17 (block)


state 33

   32 statement: declaration . ENDL

    ENDL  shift, and go to state 66


state 34

   33 statement: assignment . ENDL

    ENDL  shift, and go to state 67


state 35

   75 numeric_expression: input . LPAREN RPAREN

    LPAREN  shift, and go to state 68


state 36

   31 statement: expression . ENDL

    ENDL  shift, and go to state 69


state 37

   55 expression: boolean_expression .
   66 boolean_expression: boolean_expression . OR boolean_expression
   67                   | boolean_expression . AND boolean_expression

    OR   shift, and go to state 70
    AND  shift, and go to state 71

    $default  reduce using rule 55 (expression)


state 38

   56 expression: numeric_expression .
   57 boolean_expression: numeric_expression . EQUALS numeric_expression
   58                   | numeric_expression . NOTEQUALS numeric_expression
   59                   | numeric_expression . GREATER numeric_expression
   60                   | numeric_expression . NOTGREATER numeric_expression
   61                   | numeric_expression . LESSER numeric_expression
   62                   | numeric_expression . NOTLESSER numeric_expression
   63                   | numeric_expression . GREATEREQUALS numeric_expression
   64                   | numeric_expression . LESSEREQUALS numeric_expression
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUALS         shift, and go to state 77
    NOTEQUALS      shift, and go to state 78
    GREATER        shift, and go to state 79
    NOTGREATER     shift, and go to state 80
    LESSER         shift, and go to state 81
    NOTLESSER      shift, and go to state 82
    GREATEREQUALS  shift, and go to state 83
    LESSEREQUALS   shift, and go to state 84

    $default  reduce using rule 56 (expression)


state 39

   40 decleration_list: VAR .
   41                 | VAR . ASSIGN expression

    ASSIGN  shift, and go to state 85

    $default  reduce using rule 40 (decleration_list)


state 40

   39 declaration: BOOL decleration_list .
   42 decleration_list: decleration_list . COMMA VAR
   43                 | decleration_list . COMMA VAR ASSIGN expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 39 (declaration)


state 41

   70 numeric_expression: VAR .
   76                   | VAR . LPAREN expression_list RPAREN
   77                   | VAR . LPAREN RPAREN

    LPAREN  shift, and go to state 55

    $default  reduce using rule 70 (numeric_expression)


state 42

   65 boolean_expression: LPAREN boolean_expression . RPAREN
   66                   | boolean_expression . OR boolean_expression
   67                   | boolean_expression . AND boolean_expression

    RPAREN  shift, and go to state 87
    OR      shift, and go to state 70
    AND     shift, and go to state 71


state 43

   57 boolean_expression: numeric_expression . EQUALS numeric_expression
   58                   | numeric_expression . NOTEQUALS numeric_expression
   59                   | numeric_expression . GREATER numeric_expression
   60                   | numeric_expression . NOTGREATER numeric_expression
   61                   | numeric_expression . LESSER numeric_expression
   62                   | numeric_expression . NOTLESSER numeric_expression
   63                   | numeric_expression . GREATEREQUALS numeric_expression
   64                   | numeric_expression . LESSEREQUALS numeric_expression
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression
   83                   | LPAREN numeric_expression . RPAREN

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    RPAREN         shift, and go to state 88
    EQUALS         shift, and go to state 77
    NOTEQUALS      shift, and go to state 78
    GREATER        shift, and go to state 79
    NOTGREATER     shift, and go to state 80
    LESSER         shift, and go to state 81
    NOTLESSER      shift, and go to state 82
    GREATEREQUALS  shift, and go to state 83
    LESSEREQUALS   shift, and go to state 84


state 44

   66 boolean_expression: boolean_expression . OR boolean_expression
   67                   | boolean_expression . AND boolean_expression
   68                   | NOT boolean_expression .

    $default  reduce using rule 68 (boolean_expression)


state 45

   57 boolean_expression: numeric_expression . EQUALS numeric_expression
   58                   | numeric_expression . NOTEQUALS numeric_expression
   59                   | numeric_expression . GREATER numeric_expression
   60                   | numeric_expression . NOTGREATER numeric_expression
   61                   | numeric_expression . LESSER numeric_expression
   62                   | numeric_expression . NOTLESSER numeric_expression
   63                   | numeric_expression . GREATEREQUALS numeric_expression
   64                   | numeric_expression . LESSEREQUALS numeric_expression
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD            shift, and go to state 72
    SUB            shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUALS         shift, and go to state 77
    NOTEQUALS      shift, and go to state 78
    GREATER        shift, and go to state 79
    NOTGREATER     shift, and go to state 80
    LESSER         shift, and go to state 81
    NOTLESSER      shift, and go to state 82
    GREATEREQUALS  shift, and go to state 83
    LESSEREQUALS   shift, and go to state 84


state 46

   19 condition: IF LPAREN . expression RPAREN empty_space LBRACK blocks RBRACK ENDL else_part

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 89
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 47

   20 condition: WHILE LPAREN . expression RPAREN empty_space LBRACK blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 90
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 48

   21 condition: FOR LPAREN . expression COMMA expression RPAREN empty_space LBRACK blocks RBRACK ENDL
   22          | FOR LPAREN . expression COMMA assignment RPAREN empty_space LBRACK blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 91
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 49

   28 statement: PRINTINT LPAREN . expression_list RPAREN ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    expression_list     go to state 92
    input               go to state 35
    expression          go to state 93
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 50

   29 statement: PRINTCHAR LPAREN . expression_list RPAREN ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    expression_list     go to state 94
    input               go to state 35
    expression          go to state 93
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 51

   30 statement: PRINTFLOAT LPAREN . expression_list RPAREN ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    expression_list     go to state 95
    input               go to state 35
    expression          go to state 93
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 52

   36 declaration: INT decleration_list .
   42 decleration_list: decleration_list . COMMA VAR
   43                 | decleration_list . COMMA VAR ASSIGN expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 36 (declaration)


state 53

   37 declaration: CHAR decleration_list .
   42 decleration_list: decleration_list . COMMA VAR
   43                 | decleration_list . COMMA VAR ASSIGN expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 37 (declaration)


state 54

   38 declaration: FLOAT decleration_list .
   42 decleration_list: decleration_list . COMMA VAR
   43                 | decleration_list . COMMA VAR ASSIGN expression

    COMMA  shift, and go to state 86

    $default  reduce using rule 38 (declaration)


state 55

   76 numeric_expression: VAR LPAREN . expression_list RPAREN
   77                   | VAR LPAREN . RPAREN

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 96
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    expression_list     go to state 97
    input               go to state 35
    expression          go to state 93
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 56

   46 assignment: VAR ASSIGN . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 98
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 57

   47 assignment: VAR ADDEQ . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 99
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 58

   48 assignment: VAR SUBEQ . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 100
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 59

   49 assignment: VAR MULEQ . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 101
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 60

   50 assignment: VAR DIVEQ . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 102
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 61

   51 assignment: VAR MODEQ . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 103
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 62

    5 function: DEF VAR . LPAREN parameterList RPAREN empty_space LBRACK blocks RBRACK ENDL
    6         | DEF VAR . LPAREN RPAREN empty_space LBRACK blocks RBRACK ENDL

    LPAREN  shift, and go to state 104


state 63

    0 $accept: program $end .

    $default  accept


state 64

    4 functions: functions function .

    $default  reduce using rule 4 (functions)


state 65

   16 blocks: blocks block .

    $default  reduce using rule 16 (blocks)


state 66

   32 statement: declaration ENDL .

    $default  reduce using rule 32 (statement)


state 67

   33 statement: assignment ENDL .

    $default  reduce using rule 33 (statement)


state 68

   75 numeric_expression: input LPAREN . RPAREN

    RPAREN  shift, and go to state 105


state 69

   31 statement: expression ENDL .

    $default  reduce using rule 31 (statement)


state 70

   66 boolean_expression: boolean_expression OR . boolean_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    boolean_expression  go to state 106
    numeric_expression  go to state 45


state 71

   67 boolean_expression: boolean_expression AND . boolean_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    boolean_expression  go to state 107
    numeric_expression  go to state 45


state 72

   78 numeric_expression: numeric_expression ADD . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 109


state 73

   79 numeric_expression: numeric_expression SUB . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 110


state 74

   80 numeric_expression: numeric_expression MUL . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 111


state 75

   81 numeric_expression: numeric_expression DIV . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 112


state 76

   82 numeric_expression: numeric_expression MOD . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 113


state 77

   57 boolean_expression: numeric_expression EQUALS . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 114


state 78

   58 boolean_expression: numeric_expression NOTEQUALS . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 115


state 79

   59 boolean_expression: numeric_expression GREATER . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 116


state 80

   60 boolean_expression: numeric_expression NOTGREATER . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 117


state 81

   61 boolean_expression: numeric_expression LESSER . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 118


state 82

   62 boolean_expression: numeric_expression NOTLESSER . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 119


state 83

   63 boolean_expression: numeric_expression GREATEREQUALS . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 120


state 84

   64 boolean_expression: numeric_expression LESSEREQUALS . numeric_expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 121


state 85

   41 decleration_list: VAR ASSIGN . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 122
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 86

   42 decleration_list: decleration_list COMMA . VAR
   43                 | decleration_list COMMA . VAR ASSIGN expression

    VAR  shift, and go to state 123


state 87

   65 boolean_expression: LPAREN boolean_expression RPAREN .

    $default  reduce using rule 65 (boolean_expression)


state 88

   83 numeric_expression: LPAREN numeric_expression RPAREN .

    $default  reduce using rule 83 (numeric_expression)


state 89

   19 condition: IF LPAREN expression . RPAREN empty_space LBRACK blocks RBRACK ENDL else_part

    RPAREN  shift, and go to state 124


state 90

   20 condition: WHILE LPAREN expression . RPAREN empty_space LBRACK blocks RBRACK ENDL

    RPAREN  shift, and go to state 125


state 91

   21 condition: FOR LPAREN expression . COMMA expression RPAREN empty_space LBRACK blocks RBRACK ENDL
   22          | FOR LPAREN expression . COMMA assignment RPAREN empty_space LBRACK blocks RBRACK ENDL

    COMMA  shift, and go to state 126


state 92

   28 statement: PRINTINT LPAREN expression_list . RPAREN ENDL
   45 expression_list: expression_list . COMMA expression

    RPAREN  shift, and go to state 127
    COMMA   shift, and go to state 128


state 93

   44 expression_list: expression .

    $default  reduce using rule 44 (expression_list)


state 94

   29 statement: PRINTCHAR LPAREN expression_list . RPAREN ENDL
   45 expression_list: expression_list . COMMA expression

    RPAREN  shift, and go to state 129
    COMMA   shift, and go to state 128


state 95

   30 statement: PRINTFLOAT LPAREN expression_list . RPAREN ENDL
   45 expression_list: expression_list . COMMA expression

    RPAREN  shift, and go to state 130
    COMMA   shift, and go to state 128


state 96

   77 numeric_expression: VAR LPAREN RPAREN .

    $default  reduce using rule 77 (numeric_expression)


state 97

   45 expression_list: expression_list . COMMA expression
   76 numeric_expression: VAR LPAREN expression_list . RPAREN

    RPAREN  shift, and go to state 131
    COMMA   shift, and go to state 128


state 98

   46 assignment: VAR ASSIGN expression .

    $default  reduce using rule 46 (assignment)


state 99

   47 assignment: VAR ADDEQ expression .

    $default  reduce using rule 47 (assignment)


state 100

   48 assignment: VAR SUBEQ expression .

    $default  reduce using rule 48 (assignment)


state 101

   49 assignment: VAR MULEQ expression .

    $default  reduce using rule 49 (assignment)


state 102

   50 assignment: VAR DIVEQ expression .

    $default  reduce using rule 50 (assignment)


state 103

   51 assignment: VAR MODEQ expression .

    $default  reduce using rule 51 (assignment)


state 104

    5 function: DEF VAR LPAREN . parameterList RPAREN empty_space LBRACK blocks RBRACK ENDL
    6         | DEF VAR LPAREN . RPAREN empty_space LBRACK blocks RBRACK ENDL

    BOOL    shift, and go to state 132
    RPAREN  shift, and go to state 133
    INT     shift, and go to state 134
    CHAR    shift, and go to state 135
    FLOAT   shift, and go to state 136

    parameterList  go to state 137


state 105

   75 numeric_expression: input LPAREN RPAREN .

    $default  reduce using rule 75 (numeric_expression)


state 106

   66 boolean_expression: boolean_expression . OR boolean_expression
   66                   | boolean_expression OR boolean_expression .
   67                   | boolean_expression . AND boolean_expression

    $default  reduce using rule 66 (boolean_expression)


state 107

   66 boolean_expression: boolean_expression . OR boolean_expression
   67                   | boolean_expression . AND boolean_expression
   67                   | boolean_expression AND boolean_expression .

    $default  reduce using rule 67 (boolean_expression)


state 108

   83 numeric_expression: LPAREN . numeric_expression RPAREN

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 108
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    numeric_expression  go to state 138


state 109

   78 numeric_expression: numeric_expression . ADD numeric_expression
   78                   | numeric_expression ADD numeric_expression .
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 78 (numeric_expression)


state 110

   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   79                   | numeric_expression SUB numeric_expression .
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 79 (numeric_expression)


state 111

   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   80                   | numeric_expression MUL numeric_expression .
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    $default  reduce using rule 80 (numeric_expression)


state 112

   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   81                   | numeric_expression DIV numeric_expression .
   82                   | numeric_expression . MOD numeric_expression

    $default  reduce using rule 81 (numeric_expression)


state 113

   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression
   82                   | numeric_expression MOD numeric_expression .

    $default  reduce using rule 82 (numeric_expression)


state 114

   57 boolean_expression: numeric_expression EQUALS numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 57 (boolean_expression)


state 115

   58 boolean_expression: numeric_expression NOTEQUALS numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 58 (boolean_expression)


state 116

   59 boolean_expression: numeric_expression GREATER numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 59 (boolean_expression)


state 117

   60 boolean_expression: numeric_expression NOTGREATER numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 60 (boolean_expression)


state 118

   61 boolean_expression: numeric_expression LESSER numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 61 (boolean_expression)


state 119

   62 boolean_expression: numeric_expression NOTLESSER numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 62 (boolean_expression)


state 120

   63 boolean_expression: numeric_expression GREATEREQUALS numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 63 (boolean_expression)


state 121

   64 boolean_expression: numeric_expression LESSEREQUALS numeric_expression .
   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression

    ADD  shift, and go to state 72
    SUB  shift, and go to state 73
    MUL  shift, and go to state 74
    DIV  shift, and go to state 75
    MOD  shift, and go to state 76

    $default  reduce using rule 64 (boolean_expression)


state 122

   41 decleration_list: VAR ASSIGN expression .

    $default  reduce using rule 41 (decleration_list)


state 123

   42 decleration_list: decleration_list COMMA VAR .
   43                 | decleration_list COMMA VAR . ASSIGN expression

    ASSIGN  shift, and go to state 139

    $default  reduce using rule 42 (decleration_list)


state 124

   19 condition: IF LPAREN expression RPAREN . empty_space LBRACK blocks RBRACK ENDL else_part

    ENDL  shift, and go to state 140

    empty_space  go to state 141


state 125

   20 condition: WHILE LPAREN expression RPAREN . empty_space LBRACK blocks RBRACK ENDL

    ENDL  shift, and go to state 140

    empty_space  go to state 142


state 126

   21 condition: FOR LPAREN expression COMMA . expression RPAREN empty_space LBRACK blocks RBRACK ENDL
   22          | FOR LPAREN expression COMMA . assignment RPAREN empty_space LBRACK blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 24

    assignment          go to state 143
    input               go to state 35
    expression          go to state 144
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 127

   28 statement: PRINTINT LPAREN expression_list RPAREN . ENDL

    ENDL  shift, and go to state 145


state 128

   45 expression_list: expression_list COMMA . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 146
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 129

   29 statement: PRINTCHAR LPAREN expression_list RPAREN . ENDL

    ENDL  shift, and go to state 147


state 130

   30 statement: PRINTFLOAT LPAREN expression_list RPAREN . ENDL

    ENDL  shift, and go to state 148


state 131

   76 numeric_expression: VAR LPAREN expression_list RPAREN .

    $default  reduce using rule 76 (numeric_expression)


state 132

    9 parameterList: BOOL . VAR

    VAR  shift, and go to state 149


state 133

    6 function: DEF VAR LPAREN RPAREN . empty_space LBRACK blocks RBRACK ENDL

    ENDL  shift, and go to state 140

    empty_space  go to state 150


state 134

    7 parameterList: INT . VAR

    VAR  shift, and go to state 151


state 135

    8 parameterList: CHAR . VAR

    VAR  shift, and go to state 152


state 136

   10 parameterList: FLOAT . VAR

    VAR  shift, and go to state 153


state 137

    5 function: DEF VAR LPAREN parameterList . RPAREN empty_space LBRACK blocks RBRACK ENDL
   11 parameterList: parameterList . COMMA INT VAR
   12              | parameterList . COMMA CHAR VAR
   13              | parameterList . COMMA BOOL VAR
   14              | parameterList . COMMA FLOAT VAR

    RPAREN  shift, and go to state 154
    COMMA   shift, and go to state 155


state 138

   78 numeric_expression: numeric_expression . ADD numeric_expression
   79                   | numeric_expression . SUB numeric_expression
   80                   | numeric_expression . MUL numeric_expression
   81                   | numeric_expression . DIV numeric_expression
   82                   | numeric_expression . MOD numeric_expression
   83                   | LPAREN numeric_expression . RPAREN

    ADD     shift, and go to state 72
    SUB     shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MOD     shift, and go to state 76
    RPAREN  shift, and go to state 88


state 139

   43 decleration_list: decleration_list COMMA VAR ASSIGN . expression

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    VAR         shift, and go to state 41

    input               go to state 35
    expression          go to state 156
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 140

   26 empty_space: ENDL .

    $default  reduce using rule 26 (empty_space)


state 141

   19 condition: IF LPAREN expression RPAREN empty_space . LBRACK blocks RBRACK ENDL else_part
   27 empty_space: empty_space . ENDL

    LBRACK  shift, and go to state 157
    ENDL    shift, and go to state 158


state 142

   20 condition: WHILE LPAREN expression RPAREN empty_space . LBRACK blocks RBRACK ENDL
   27 empty_space: empty_space . ENDL

    LBRACK  shift, and go to state 159
    ENDL    shift, and go to state 158


state 143

   22 condition: FOR LPAREN expression COMMA assignment . RPAREN empty_space LBRACK blocks RBRACK ENDL

    RPAREN  shift, and go to state 160


state 144

   21 condition: FOR LPAREN expression COMMA expression . RPAREN empty_space LBRACK blocks RBRACK ENDL

    RPAREN  shift, and go to state 161


state 145

   28 statement: PRINTINT LPAREN expression_list RPAREN ENDL .

    $default  reduce using rule 28 (statement)


state 146

   45 expression_list: expression_list COMMA expression .

    $default  reduce using rule 45 (expression_list)


state 147

   29 statement: PRINTCHAR LPAREN expression_list RPAREN ENDL .

    $default  reduce using rule 29 (statement)


state 148

   30 statement: PRINTFLOAT LPAREN expression_list RPAREN ENDL .

    $default  reduce using rule 30 (statement)


state 149

    9 parameterList: BOOL VAR .

    $default  reduce using rule 9 (parameterList)


state 150

    6 function: DEF VAR LPAREN RPAREN empty_space . LBRACK blocks RBRACK ENDL
   27 empty_space: empty_space . ENDL

    LBRACK  shift, and go to state 162
    ENDL    shift, and go to state 158


state 151

    7 parameterList: INT VAR .

    $default  reduce using rule 7 (parameterList)


state 152

    8 parameterList: CHAR VAR .

    $default  reduce using rule 8 (parameterList)


state 153

   10 parameterList: FLOAT VAR .

    $default  reduce using rule 10 (parameterList)


state 154

    5 function: DEF VAR LPAREN parameterList RPAREN . empty_space LBRACK blocks RBRACK ENDL

    ENDL  shift, and go to state 140

    empty_space  go to state 163


state 155

   11 parameterList: parameterList COMMA . INT VAR
   12              | parameterList COMMA . CHAR VAR
   13              | parameterList COMMA . BOOL VAR
   14              | parameterList COMMA . FLOAT VAR

    BOOL   shift, and go to state 164
    INT    shift, and go to state 165
    CHAR   shift, and go to state 166
    FLOAT  shift, and go to state 167


state 156

   43 decleration_list: decleration_list COMMA VAR ASSIGN expression .

    $default  reduce using rule 43 (decleration_list)


state 157

   19 condition: IF LPAREN expression RPAREN empty_space LBRACK . blocks RBRACK ENDL else_part

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    blocks              go to state 168
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 158

   27 empty_space: empty_space ENDL .

    $default  reduce using rule 27 (empty_space)


state 159

   20 condition: WHILE LPAREN expression RPAREN empty_space LBRACK . blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    blocks              go to state 169
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 160

   22 condition: FOR LPAREN expression COMMA assignment RPAREN . empty_space LBRACK blocks RBRACK ENDL

    ENDL  shift, and go to state 140

    empty_space  go to state 170


state 161

   21 condition: FOR LPAREN expression COMMA expression RPAREN . empty_space LBRACK blocks RBRACK ENDL

    ENDL  shift, and go to state 140

    empty_space  go to state 171


state 162

    6 function: DEF VAR LPAREN RPAREN empty_space LBRACK . blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    blocks              go to state 172
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 163

    5 function: DEF VAR LPAREN parameterList RPAREN empty_space . LBRACK blocks RBRACK ENDL
   27 empty_space: empty_space . ENDL

    LBRACK  shift, and go to state 173
    ENDL    shift, and go to state 158


state 164

   13 parameterList: parameterList COMMA BOOL . VAR

    VAR  shift, and go to state 174


state 165

   11 parameterList: parameterList COMMA INT . VAR

    VAR  shift, and go to state 175


state 166

   12 parameterList: parameterList COMMA CHAR . VAR

    VAR  shift, and go to state 176


state 167

   14 parameterList: parameterList COMMA FLOAT . VAR

    VAR  shift, and go to state 177


state 168

   16 blocks: blocks . block
   19 condition: IF LPAREN expression RPAREN empty_space LBRACK blocks . RBRACK ENDL else_part

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    RBRACK      shift, and go to state 178
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 169

   16 blocks: blocks . block
   20 condition: WHILE LPAREN expression RPAREN empty_space LBRACK blocks . RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    RBRACK      shift, and go to state 179
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 170

   22 condition: FOR LPAREN expression COMMA assignment RPAREN empty_space . LBRACK blocks RBRACK ENDL
   27 empty_space: empty_space . ENDL

    LBRACK  shift, and go to state 180
    ENDL    shift, and go to state 158


state 171

   21 condition: FOR LPAREN expression COMMA expression RPAREN empty_space . LBRACK blocks RBRACK ENDL
   27 empty_space: empty_space . ENDL

    LBRACK  shift, and go to state 181
    ENDL    shift, and go to state 158


state 172

    6 function: DEF VAR LPAREN RPAREN empty_space LBRACK blocks . RBRACK ENDL
   16 blocks: blocks . block

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    RBRACK      shift, and go to state 182
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 173

    5 function: DEF VAR LPAREN parameterList RPAREN empty_space LBRACK . blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    blocks              go to state 183
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 174

   13 parameterList: parameterList COMMA BOOL VAR .

    $default  reduce using rule 13 (parameterList)


state 175

   11 parameterList: parameterList COMMA INT VAR .

    $default  reduce using rule 11 (parameterList)


state 176

   12 parameterList: parameterList COMMA CHAR VAR .

    $default  reduce using rule 12 (parameterList)


state 177

   14 parameterList: parameterList COMMA FLOAT VAR .

    $default  reduce using rule 14 (parameterList)


state 178

   19 condition: IF LPAREN expression RPAREN empty_space LBRACK blocks RBRACK . ENDL else_part

    ENDL  shift, and go to state 184


state 179

   20 condition: WHILE LPAREN expression RPAREN empty_space LBRACK blocks RBRACK . ENDL

    ENDL  shift, and go to state 185


state 180

   22 condition: FOR LPAREN expression COMMA assignment RPAREN empty_space LBRACK . blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    blocks              go to state 186
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 181

   21 condition: FOR LPAREN expression COMMA expression RPAREN empty_space LBRACK . blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    blocks              go to state 187
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 182

    6 function: DEF VAR LPAREN RPAREN empty_space LBRACK blocks RBRACK . ENDL

    ENDL  shift, and go to state 188


state 183

    5 function: DEF VAR LPAREN parameterList RPAREN empty_space LBRACK blocks . RBRACK ENDL
   16 blocks: blocks . block

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    RBRACK      shift, and go to state 189
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 184

   19 condition: IF LPAREN expression RPAREN empty_space LBRACK blocks RBRACK ENDL . else_part

    ELSE  shift, and go to state 190

    $default  reduce using rule 25 (else_part)

    else_part  go to state 191


state 185

   20 condition: WHILE LPAREN expression RPAREN empty_space LBRACK blocks RBRACK ENDL .

    $default  reduce using rule 20 (condition)


state 186

   16 blocks: blocks . block
   22 condition: FOR LPAREN expression COMMA assignment RPAREN empty_space LBRACK blocks . RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    RBRACK      shift, and go to state 192
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 187

   16 blocks: blocks . block
   21 condition: FOR LPAREN expression COMMA expression RPAREN empty_space LBRACK blocks . RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    RBRACK      shift, and go to state 193
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 188

    6 function: DEF VAR LPAREN RPAREN empty_space LBRACK blocks RBRACK ENDL .

    $default  reduce using rule 6 (function)


state 189

    5 function: DEF VAR LPAREN parameterList RPAREN empty_space LBRACK blocks RBRACK . ENDL

    ENDL  shift, and go to state 194


state 190

   23 else_part: ELSE . empty_space LBRACK blocks RBRACK ENDL
   24          | ELSE . condition

    IF     shift, and go to state 8
    WHILE  shift, and go to state 9
    FOR    shift, and go to state 10
    ENDL   shift, and go to state 140

    condition    go to state 195
    empty_space  go to state 196


state 191

   19 condition: IF LPAREN expression RPAREN empty_space LBRACK blocks RBRACK ENDL else_part .

    $default  reduce using rule 19 (condition)


state 192

   22 condition: FOR LPAREN expression COMMA assignment RPAREN empty_space LBRACK blocks RBRACK . ENDL

    ENDL  shift, and go to state 197


state 193

   21 condition: FOR LPAREN expression COMMA expression RPAREN empty_space LBRACK blocks RBRACK . ENDL

    ENDL  shift, and go to state 198


state 194

    5 function: DEF VAR LPAREN parameterList RPAREN empty_space LBRACK blocks RBRACK ENDL .

    $default  reduce using rule 5 (function)


state 195

   24 else_part: ELSE condition .

    $default  reduce using rule 24 (else_part)


state 196

   23 else_part: ELSE empty_space . LBRACK blocks RBRACK ENDL
   27 empty_space: empty_space . ENDL

    LBRACK  shift, and go to state 199
    ENDL    shift, and go to state 158


state 197

   22 condition: FOR LPAREN expression COMMA assignment RPAREN empty_space LBRACK blocks RBRACK ENDL .

    $default  reduce using rule 22 (condition)


state 198

   21 condition: FOR LPAREN expression COMMA expression RPAREN empty_space LBRACK blocks RBRACK ENDL .

    $default  reduce using rule 21 (condition)


state 199

   23 else_part: ELSE empty_space LBRACK . blocks RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    blocks              go to state 200
    block               go to state 30
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 200

   16 blocks: blocks . block
   23 else_part: ELSE empty_space LBRACK blocks . RBRACK ENDL

    error       shift, and go to state 1
    NUM         shift, and go to state 2
    LETTER      shift, and go to state 3
    DECIMAL     shift, and go to state 4
    BOOL        shift, and go to state 5
    LPAREN      shift, and go to state 6
    NOT         shift, and go to state 7
    IF          shift, and go to state 8
    RBRACK      shift, and go to state 201
    WHILE       shift, and go to state 9
    FOR         shift, and go to state 10
    ERROR       shift, and go to state 11
    PRINTINT    shift, and go to state 12
    PRINTCHAR   shift, and go to state 13
    PRINTFLOAT  shift, and go to state 14
    INTINPUT    shift, and go to state 15
    FLOATINPUT  shift, and go to state 16
    CHARINPUT   shift, and go to state 17
    TRUE        shift, and go to state 18
    FALSE       shift, and go to state 19
    ENDL        shift, and go to state 20
    INT         shift, and go to state 21
    CHAR        shift, and go to state 22
    FLOAT       shift, and go to state 23
    VAR         shift, and go to state 24

    block               go to state 65
    condition           go to state 31
    statement           go to state 32
    declaration         go to state 33
    assignment          go to state 34
    input               go to state 35
    expression          go to state 36
    boolean_expression  go to state 37
    numeric_expression  go to state 38


state 201

   23 else_part: ELSE empty_space LBRACK blocks RBRACK . ENDL

    ENDL  shift, and go to state 202


state 202

   23 else_part: ELSE empty_space LBRACK blocks RBRACK ENDL .

    $default  reduce using rule 23 (else_part)
